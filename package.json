{
  "name": "pano-app",
  "version": "0.1.0",
  "description": "PrimeZone Advanced Panorama Viewer - A professional panoramic image viewer application",
  "author": "FRIBOUZ",
  "private": true,
  "main": "desktop/main.js",
  "scripts": {
    "dev": "next dev",
    "dev:desktop": "concurrently \"npm run dev\" \"wait-on http://localhost:3000 && electron desktop/main.js\"",
    "build": "cross-env NODE_OPTIONS='--max-old-space-size=4096' next build && npm run postbuild",
    "postbuild": "node -e \"const fs = require('fs'); const path = require('path'); const standaloneDir = '.next/standalone'; const staticSrc = '.next/static'; const staticDest = path.join(standaloneDir, '.next/static'); const scriptsSrc = 'scripts'; const scriptsDest = path.join(standaloneDir, 'scripts'); if (fs.existsSync(staticSrc) && fs.existsSync(standaloneDir)) { try { fs.cpSync(staticSrc, staticDest, { recursive: true, force: true }); console.log('✅ Static files copied to standalone build'); } catch (error) { console.warn('⚠️ Failed to copy static files:', error.message); } } if (fs.existsSync(scriptsSrc) && fs.existsSync(standaloneDir)) { try { fs.cpSync(scriptsSrc, scriptsDest, { recursive: true, force: true }); console.log('✅ Scripts directory copied to standalone build'); } catch (error) { console.warn('⚠️ Failed to copy scripts directory:', error.message); } }\"",
    "build:standalone": "node -e \"const fs = require('fs'); fs.copyFileSync('config/next.config.production.js', 'next.config.js.bak'); fs.copyFileSync('config/next.config.production.js', 'next.config.js');\" && cross-env NODE_OPTIONS='--max-old-space-size=4096' next build && node -e \"const fs = require('fs'); fs.renameSync('next.config.js.bak', 'next.config.js');\"",
    "postbuild:standalone": "node scripts/node/copy-public.js && node scripts/fix-standalone-asar.js && node scripts/install-standalone-deps.js",
    "start": "next start",
    "lint": "next lint",
    "generate-config": "node scripts/node/generate-config.js",
    "dev:config": "npm run generate-config && npm run dev",
    "clean": "rimraf .next out",
    "cleanup-temp": "node scripts/node/cleanup-temp.js",
    "desktop:test": "npm run build:standalone && electron desktop/main.js --force-production",
    "desktop:build": "npm run build:standalone && electron-builder --config=config/electron-builder.json",
    "desktop:build:credentials": "node scripts/build/build-with-credentials.js",
    "desktop:build:win": "npm run build:standalone && electron-builder --config=config/electron-builder.json --win --dir && node scripts/install-packaged-deps.js",
    "desktop:build:win:complete": "node scripts/build/build-windows-complete.js",
    "desktop:build:reproducible": "node scripts/build/build-reproducible-electron.js",
    "desktop:build:reproducible:clean": "node scripts/build/build-reproducible-electron.js --clean",
    "desktop:build:win32": "node scripts/build/build-reproducible-electron.js --arch=ia32",
    "desktop:build:x64": "node scripts/build/build-reproducible-electron.js --arch=x64",
    "build:electron": "node scripts/build-electron-packager.js",
    "desktop:build:mac": "npm run build:standalone && electron-builder --config=config/electron-builder.json --mac",
    "desktop:build:linux": "npm run build:standalone && electron-builder --config=config/electron-builder.json --linux",
    "test:credentials": "node scripts/test-credentials.js",
    "test": "cd . && jest --config=config/jest.config.js",
    "test:watch": "cd . && jest --config=config/jest.config.js --watch",
    "test:coverage": "cd . && jest --config=config/jest.config.js --coverage",
    "type-check": "tsc --noEmit",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "verify-build": "node scripts/verify-build-contents.js",
    "prepare": "husky install"
  },
  "dependencies": {
    "@supabase/supabase-js": "^2.52.0",
    "@types/archiver": "^6.0.3",
    "@types/formidable": "^3.4.5",
    "@types/uuid": "^10.0.0",
    "adm-zip": "^0.5.16",
    "app-builder-bin": "^5.0.0-alpha.12",
    "archiver": "^7.0.1",
    "axios": "^1.10.0",
    "compression": "^1.7.4",
    "express": "^4.18.2",
    "form-data": "^4.0.4",
    "formidable": "^3.5.4",
    "fs-extra": "^11.1.1",
    "helmet": "^7.1.0",
    "mime-types": "^2.1.35",
    "next": "^14.2.30",
    "node-fetch": "^3.3.2",
    "react": "18.2.0",
    "react-dom": "18.2.0",
    "react-dropzone": "^14.3.8",
    "react-icons": "^5.5.0",
    "react-toastify": "^11.0.5",
    "uuid": "^11.1.0"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^2",
    "@tailwindcss/postcss": "^4",
    "@testing-library/jest-dom": "^6.1.0",
    "@testing-library/react": "^14.3.1",
    "@testing-library/user-event": "^14.5.0",
    "@types/adm-zip": "^0.5.7",
    "@types/jest": "^29.5.14",
    "@types/node": "^20",
    "@types/react": "^18.2.0",
    "@types/react-dom": "^18.2.0",
    "concurrently": "^8.2.2",
    "cross-env": "^7.0.3",
    "electron": "^27.1.3",
    "electron-builder": "^26.0.12",
    "electron-builder-squirrel-windows": "^24.13.3",
    "electron-packager": "^17.1.2",
    "eslint": "^8",
    "eslint-config-next": "14.2.3",
    "eslint-config-prettier": "^9.0.0",
    "eslint-plugin-jest": "^27.6.0",
    "husky": "^8.0.3",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^29.7.0",
    "lint-staged": "^15.2.0",
    "prettier": "^3.1.0",
    "rimraf": "^5.0.5",
    "tailwindcss": "^4",
    "ts-prune": "^0.10.3",
    "typescript": "^5",
    "wait-on": "^8.0.3"
  }
}
